{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","charAt","toLocaleUpperCase","slice","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,aADK,CACL,QAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,EAAWQ,OAAO,GAAGC,oBAAsBT,EAAWU,MAAM,IAAjE,mBAAwEH,OAC3FN,EAAc,MAMlB,SACI,uBACIU,KAAK,OACLC,MAAQZ,EACRa,SAnBc,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAWH,GAH/C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAsBxC,OAhBAC,qBAAW,WAEPC,YAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GACHJ,EAAS,CACLf,KAAMmB,EACNN,SAAS,SAGtB,OAGJ,CAACpB,IAEGqB,EDlB0BM,CAAc3B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAOrB,OACI,qCACA,mCAAOpB,KAELoB,GAAW,qBACTF,IAAI,UACJF,UAAU,mCACVC,IAAI,wIAIR,qBAAKD,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEzBrBiB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,cAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAI9B,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCV9B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.323ff6b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value); // Con esta función cambiamos el input\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Con esto evitamos el comportamiento por defecto, en este caso evitamos que refresque la página\n\n        if ( inputValue.trim().length > 2 ){\n            setCategories( cats => [inputValue.charAt(0).toLocaleUpperCase() + inputValue.slice(1), ...cats] );\n            setInputValue('');\n        };\n\n    };\n\n    return ( // El onSubmit es el evento que lanzamos al presionar enter\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};","export const getGifs = async ( category ) => {\n\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=DRWA5Lq4vCJqS52Qhu4wfDCL0Si8UWTc`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;   \n};","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\n    return (\n        <div className=\"card animate__animated animate__backInRight\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( setImages );\n    // }, [ category ]); // Con useEffect hacemos que el componente solo se renderice una vez\n\n    return (\n        <>\n        <h3> { category }</h3>\n        \n        { loading && <img \n            alt=\"Loading\"\n            className=\"animate__animated animate__flash\" \n            src=\"https://media0.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=dd3a43a138jukhp2hg1vjeniq2h59971vmgqawug7bfkaoyp&rid=giphy.gif&ct=g\">\n                </img> }\n                \n\n        <div className=\"card-grid\">\n            {\n                images.map( img  => (\n                    <GifGridItem \n                        key={ img.id }\n                        { ...img }\n                    />\n               ))\n            }\n        </div>\n        </>\n    )\n};\n\n\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        setTimeout(() => {\n            \n            getGifs( category )\n                .then( imgs => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n                });\n        }, 500);\n\n\n    }, [category])\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={ setCategories }/>\n        <hr/>\n\n        <ol>\n            { \n                categories.map( category => (\n                    <GifGrid \n                        key={ category }\n                        category={ category }\n                        />\n                ))\n            }\n        </ol>\n\n        </>\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n  );\n\n"],"sourceRoot":""}